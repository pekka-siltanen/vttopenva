// OpenVA - Open software platform for visual analytics
//
// Copyright (c) 2018, VTT Technical Research Centre of Finland Ltd
// All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
//    1) Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//    2) Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//    3) Neither the name of the VTT Technical Research Centre of Finland nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS AND CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

package fi.vtt.openva.domain;
// Generated Dec 1, 2016 10:45:58 AM by Hibernate Tools 5.1.0.Alpha1

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;



// TODO: Auto-generated Javadoc
/**
 * Objectofinterest generated by hbm2java.
 */
@Entity
@Table(name = "objectofinterest", schema = "public")
public class Objectofinterest implements java.io.Serializable {

	/** The id. */
	private int id;
	
	/** The oitype. */
	private Oitype oitype;
	
	/** The oitype title. */
	private String oitypeTitle;
	
	/** The title. */
	private String title;
	
	/** The report title. */
	private String reportTitle;
	
	/** The description. */
	private String description;
	
	/** The valid from. */
	private LocalDateTime validFrom;
	
	/** The valid to. */
	private LocalDateTime validTo;
	
	/** The time created. */
	private LocalDateTime timeCreated;
	
	/** The time deleted. */
	private LocalDateTime timeDeleted;
	
	/** The oi backgroundproperty values. */
	private Set<OiBackgroundpropertyValue> oiBackgroundpropertyValues = new HashSet<OiBackgroundpropertyValue>(0);
	
	/** The oi relations for child oi id. */
	private Set<OiRelation> oiRelationsForChildOiId = new HashSet<OiRelation>(0);
	
	/** The oi relations for parent oi id. */
	private Set<OiRelation> oiRelationsForParentOiId = new HashSet<OiRelation>(0);
	
	/** The oi measuredproperties. */
	private Set<OiMeasuredproperty> oiMeasuredproperties = new HashSet<OiMeasuredproperty>(0);

	/**
	 * Instantiates a new objectofinterest.
	 */
	public Objectofinterest() {
	}

	/**
	 * Instantiates a new objectofinterest.
	 *
	 * @param id the id
	 */
	public Objectofinterest(int id) {
		this.id = id;
	}

	/**
	 * Instantiates a new objectofinterest.
	 *
	 * @param id the id
	 * @param oitype the oitype
	 * @param oitypeTitle the oitype title
	 * @param title the title
	 * @param reportTitle the report title
	 * @param description the description
	 * @param validFrom the valid from
	 * @param validTo the valid to
	 * @param timeCreated the time created
	 * @param timeDeleted the time deleted
	 * @param oiBackgroundpropertyValues the oi backgroundproperty values
	 * @param oiRelationsForChildOiId the oi relations for child oi id
	 */
	public Objectofinterest(int id, Oitype oitype, String oitypeTitle, String title, String reportTitle,
			String description, LocalDateTime validFrom, LocalDateTime validTo, LocalDateTime timeCreated, LocalDateTime timeDeleted,
			Set<OiBackgroundpropertyValue> oiBackgroundpropertyValues, 
			Set<OiRelation> oiRelationsForChildOiId) {
		this.id = id;
		this.oitype = oitype;
		this.oitypeTitle = oitypeTitle;
		this.title = title;
		this.reportTitle = reportTitle;
		this.description = description;
		this.validFrom = validFrom;
		this.validTo = validTo;
		this.timeCreated = timeCreated;
		this.timeDeleted = timeDeleted;
		this.oiBackgroundpropertyValues = oiBackgroundpropertyValues;
		this.oiRelationsForChildOiId = oiRelationsForChildOiId;

		this.oiRelationsForParentOiId = oiRelationsForParentOiId;

		this.oiMeasuredproperties = oiMeasuredproperties;
	}

	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	@Id
@GeneratedValue(strategy=GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id the new id
	 */
	public void setId(int id) {
		this.id = id;
	}

	/**
	 * Gets the oitype.
	 *
	 * @return the oitype
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "oitype_id")
	public Oitype getOitype() {
		return this.oitype;
	}

	/**
	 * Sets the oitype.
	 *
	 * @param oitype the new oitype
	 */
	public void setOitype(Oitype oitype) {
		this.oitype = oitype;
	}

	/**
	 * Gets the oitype title.
	 *
	 * @return the oitype title
	 */
	@Column(name = "oitype_title")
	public String getOitypeTitle() {
		return this.oitypeTitle;
	}

	/**
	 * Sets the oitype title.
	 *
	 * @param oitypeTitle the new oitype title
	 */
	public void setOitypeTitle(String oitypeTitle) {
		this.oitypeTitle = oitypeTitle;
	}

	/**
	 * Gets the title.
	 *
	 * @return the title
	 */
	@Column(name = "title")
	public String getTitle() {
		return this.title;
	}

	/**
	 * Sets the title.
	 *
	 * @param title the new title
	 */
	public void setTitle(String title) {
		this.title = title;
	}

	/**
	 * Gets the report title.
	 *
	 * @return the report title
	 */
	@Column(name = "report_title")
	public String getReportTitle() {
		return this.reportTitle;
	}

	/**
	 * Sets the report title.
	 *
	 * @param reportTitle the new report title
	 */
	public void setReportTitle(String reportTitle) {
		this.reportTitle = reportTitle;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	
	/**
	 * Gets the valid from.
	 *
	 * @return the valid from
	 */
	@Column(name = "valid_from", length = 29)
	public LocalDateTime getValidFrom() {
		return this.validFrom;
	}

	/**
	 * Sets the valid from.
	 *
	 * @param validFrom the new valid from
	 */
	public void setValidFrom(LocalDateTime validFrom) {
		this.validFrom = validFrom;
	}

	
	/**
	 * Gets the valid to.
	 *
	 * @return the valid to
	 */
	@Column(name = "valid_to", length = 29)
	public LocalDateTime getValidTo() {
		return this.validTo;
	}

	/**
	 * Sets the valid to.
	 *
	 * @param validTo the new valid to
	 */
	public void setValidTo(LocalDateTime validTo) {
		this.validTo = validTo;
	}

	
	/**
	 * Gets the time created.
	 *
	 * @return the time created
	 */
	@Column(name = "time_created", length = 29)
	public LocalDateTime getTimeCreated() {
		return this.timeCreated;
	}

	/**
	 * Sets the time created.
	 *
	 * @param timeCreated the new time created
	 */
	public void setTimeCreated(LocalDateTime timeCreated) {
		this.timeCreated = timeCreated;
	}

	
	/**
	 * Gets the time deleted.
	 *
	 * @return the time deleted
	 */
	@Column(name = "time_deleted", length = 29)
	public LocalDateTime getTimeDeleted() {
		return this.timeDeleted;
	}

	/**
	 * Sets the time deleted.
	 *
	 * @param timeDeleted the new time deleted
	 */
	public void setTimeDeleted(LocalDateTime timeDeleted) {
		this.timeDeleted = timeDeleted;
	}

	/**
	 * Gets the oi backgroundproperty values.
	 *
	 * @return the oi backgroundproperty values
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "objectofinterest")
	public Set<OiBackgroundpropertyValue> getOiBackgroundpropertyValues() {
		return this.oiBackgroundpropertyValues;
	}

	/**
	 * Sets the oi backgroundproperty values.
	 *
	 * @param oiBackgroundpropertyValues the new oi backgroundproperty values
	 */
	public void setOiBackgroundpropertyValues(Set<OiBackgroundpropertyValue> oiBackgroundpropertyValues) {
		this.oiBackgroundpropertyValues = oiBackgroundpropertyValues;
	}



	/**
	 * Gets the oi relations for child oi id.
	 *
	 * @return the oi relations for child oi id
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "objectofinterestByChildOiId")
	public Set<OiRelation> getOiRelationsForChildOiId() {
		return this.oiRelationsForChildOiId;
	}

	/**
	 * Sets the oi relations for child oi id.
	 *
	 * @param oiRelationsForChildOiId the new oi relations for child oi id
	 */
	public void setOiRelationsForChildOiId(Set<OiRelation> oiRelationsForChildOiId) {
		this.oiRelationsForChildOiId = oiRelationsForChildOiId;
	}






	/**
	 * Gets the oi relations for parent oi id.
	 *
	 * @return the oi relations for parent oi id
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "objectofinterestByParentOiId")
	public Set<OiRelation> getOiRelationsForParentOiId() {
		return this.oiRelationsForParentOiId;
	}

	/**
	 * Sets the oi relations for parent oi id.
	 *
	 * @param oiRelationsForParentOiId the new oi relations for parent oi id
	 */
	public void setOiRelationsForParentOiId(Set<OiRelation> oiRelationsForParentOiId) {
		this.oiRelationsForParentOiId = oiRelationsForParentOiId;
	}



	/**
	 * Gets the oi measuredproperties.
	 *
	 * @return the oi measuredproperties
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "objectofinterest")
	public Set<OiMeasuredproperty> getOiMeasuredproperties() {
		return this.oiMeasuredproperties;
	}

	/**
	 * Sets the oi measuredproperties.
	 *
	 * @param oiMeasuredproperties the new oi measuredproperties
	 */
	public void setOiMeasuredproperties(Set<OiMeasuredproperty> oiMeasuredproperties) {
		this.oiMeasuredproperties = oiMeasuredproperties;
	}

}
