// OpenVA - Open software platform for visual analytics
//
// Copyright (c) 2018, VTT Technical Research Centre of Finland Ltd
// All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
//    1) Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//    2) Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//    3) Neither the name of the VTT Technical Research Centre of Finland nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS AND CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

package fi.vtt.openva.domain;
import java.time.LocalDateTime;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * OiMeasuredpropertyValue generated by hbm2java
 */
@Entity
@Table(name = "oi_measuredproperty_value", schema = "public")
public class OiMeasuredpropertyValue implements java.io.Serializable {

	private long id;
	private OiMeasuredproperty oiMeasuredproperty;
	private Float measurementValue;
	private LocalDateTime measurementTime;

	public OiMeasuredpropertyValue() {
	}

	public OiMeasuredpropertyValue(long id) {
		this.id = id;
	}

	public OiMeasuredpropertyValue(long id, OiMeasuredproperty oiMeasuredproperty, Float measurementValue,
			LocalDateTime measurementTime) {
		this.id = id;
		this.oiMeasuredproperty = oiMeasuredproperty;
		this.measurementValue = measurementValue;
		this.measurementTime = measurementTime;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "oi_measuredproperty_id")
	public OiMeasuredproperty getOiMeasuredproperty() {
		return this.oiMeasuredproperty;
	}

	public void setOiMeasuredproperty(OiMeasuredproperty oiMeasuredproperty) {
		this.oiMeasuredproperty = oiMeasuredproperty;
	}

	@Column(name = "measurement_value", precision = 8, scale = 8)
	public Float getMeasurementValue() {
		return this.measurementValue;
	}

	public void setMeasurementValue(Float measurementValue) {
		this.measurementValue = measurementValue;
	}

	@Column(name = "measurement_time", length = 29)
	public LocalDateTime getMeasurementTime() {
		return this.measurementTime;
	}

	public void setMeasurementTime(LocalDateTime measurementTime) {
		this.measurementTime = measurementTime;
	}

}





//@Entity
//@Table(name = "oi_measuredproperty_value", schema = "public")
//public class OiMeasuredpropertyValue implements java.io.Serializable {
//
//	/** The id. */
//	private long id;
//	
//	/** The oi measuredproperty. */
//	private OiMeasuredproperty oiMeasuredproperty;
//	
//	/** The measurement value. */
//	private Float measurementValue;
//	
//	/** The measurement time. */
//	private LocalDateTime measurementTime;
//
//	/**
//	 * Instantiates a new oi measuredproperty value.
//	 */
//	public OiMeasuredpropertyValue() {
//	}
//
//	/**
//	 * Instantiates a new oi measuredproperty value.
//	 *
//	 * @param id the id
//	 */
//	public OiMeasuredpropertyValue(long id) {
//		this.id = id;
//	}
//
//	/**
//	 * Instantiates a new oi measuredproperty value.
//	 *
//	 * @param id the id
//	 * @param oiMeasuredproperty the oi measuredproperty
//	 * @param measurementValue the measurement value
//	 * @param measurementTime the measurement time
//	 */
//	public OiMeasuredpropertyValue(long id, OiMeasuredproperty oiMeasuredproperty, Float measurementValue,
//			LocalDateTime measurementTime) {
//		this.id = id;
//		this.oiMeasuredproperty = oiMeasuredproperty;
//		this.measurementValue = measurementValue;
//		this.measurementTime = measurementTime;
//	}
//
//	/**
//	 * Gets the id.
//	 *
//	 * @return the id
//	 */
//	@Id
//@GeneratedValue(strategy=GenerationType.IDENTITY)
//
//	@Column(name = "id", unique = true, nullable = false)
//	public long getId() {
//		return this.id;
//	}
//
//	/**
//	 * Sets the id.
//	 *
//	 * @param id the new id
//	 */
//	public void setId(long id) {
//		this.id = id;
//	}
//
//	/**
//	 * Gets the oi measuredproperty.
//	 *
//	 * @return the oi measuredproperty
//	 */
//	@ManyToOne(fetch = FetchType.LAZY)
//	@JoinColumn(name = "oi_measuredproperty_id")
//	public OiMeasuredproperty getOiMeasuredproperty() {
//		return this.oiMeasuredproperty;
//	}
//
//	/**
//	 * Sets the oi measuredproperty.
//	 *
//	 * @param oiMeasuredproperty the new oi measuredproperty
//	 */
//	public void setOiMeasuredproperty(OiMeasuredproperty oiMeasuredproperty) {
//		this.oiMeasuredproperty = oiMeasuredproperty;
//	}
//
//	/**
//	 * Gets the measurement value.
//	 *
//	 * @return the measurement value
//	 */
//	@Column(name = "measurement_value", precision = 8, scale = 8)
//	public Float getMeasurementValue() {
//		return this.measurementValue;
//	}
//
//	/**
//	 * Sets the measurement value.
//	 *
//	 * @param measurementValue the new measurement value
//	 */
//	public void setMeasurementValue(Float measurementValue) {
//		this.measurementValue = measurementValue;
//	}
//
//	
//	/**
//	 * Gets the measurement time.
//	 *
//	 * @return the measurement time
//	 */
//	@Column(name = "measurement_time", length = 29)
//	public LocalDateTime getMeasurementTime() {
//		return this.measurementTime;
//	}
//
//	/**
//	 * Sets the measurement time.
//	 *
//	 * @param measurementTime the new measurement time
//	 */
//	public void setMeasurementTime(LocalDateTime measurementTime) {
//		this.measurementTime = measurementTime;
//	}
//
//}
