// OpenVA - Open software platform for visual analytics
//
// Copyright (c) 2018, VTT Technical Research Centre of Finland Ltd
// All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are met:
//
//    1) Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//    2) Redistributions in binary form must reproduce the above copyright
//       notice, this list of conditions and the following disclaimer in the
//       documentation and/or other materials provided with the distribution.
//    3) Neither the name of the VTT Technical Research Centre of Finland nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY
// EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
// WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS AND CONTRIBUTORS BE LIABLE FOR ANY
// DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
// ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

package fi.vtt.openva.domain;
// Generated Dec 1, 2016 10:45:58 AM by Hibernate Tools 5.1.0.Alpha1

import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

// TODO: Auto-generated Javadoc
/**
 * Oitype generated by hbm2java.
 */
@Entity
@Table(name = "oitype", schema = "public")
public class Oitype implements java.io.Serializable {

	/** The id. */
	private int id;
	
	/** The application. */
	private Application application;
	
	/** The title. */
	private String title;
	
	/** The report title. */
	private String reportTitle;
	
	/** The description. */
	private String description;
	
	/** The time created. */
	private LocalDateTime timeCreated;
	
	/** The time deleted. */
	private LocalDateTime timeDeleted;
	
	/** The oitype relations for parent oitype id. */
	private Set<OitypeRelation> oitypeRelationsForParentOitypeId = new HashSet<OitypeRelation>(0);
	
	/** The oitype relations for child oitype id. */
	private Set<OitypeRelation> oitypeRelationsForChildOitypeId = new HashSet<OitypeRelation>(0);
	
	/** The oitype properties. */
	private Set<OitypeProperty> oitypeProperties = new HashSet<OitypeProperty>(0);
	
	/** The objectofinterests. */
	private Set<Objectofinterest> objectofinterests = new HashSet<Objectofinterest>(0);

	/**
	 * Instantiates a new oitype.
	 */
	public Oitype() {
	}

	/**
	 * Instantiates a new oitype.
	 *
	 * @param id the id
	 */
	public Oitype(int id) {
		this.id = id;
	}

	/**
	 * Instantiates a new oitype.
	 *
	 * @param id the id
	 * @param application the application
	 * @param title the title
	 * @param reportTitle the report title
	 * @param description the description
	 * @param timeCreated the time created
	 * @param timeDeleted the time deleted
	 * @param oitypeRelationsForParentOitypeId the oitype relations for parent oitype id
	 * @param oitypeRelationsForChildOitypeId the oitype relations for child oitype id
	 * @param oitypeProperties the oitype properties
	 * @param objectofinterests the objectofinterests
	 */
	public Oitype(int id, Application application, String title, String reportTitle, String description,
			LocalDateTime timeCreated, LocalDateTime timeDeleted, Set<OitypeRelation> oitypeRelationsForParentOitypeId,
			Set<OitypeRelation> oitypeRelationsForChildOitypeId, Set<OitypeProperty> oitypeProperties,
			Set<Objectofinterest> objectofinterests) {
		this.id = id;
		this.application = application;
		this.title = title;
		this.reportTitle = reportTitle;
		this.description = description;
		this.timeCreated = timeCreated;
		this.timeDeleted = timeDeleted;
		this.oitypeRelationsForParentOitypeId = oitypeRelationsForParentOitypeId;
		this.oitypeRelationsForChildOitypeId = oitypeRelationsForChildOitypeId;
		this.oitypeProperties = oitypeProperties;
		this.objectofinterests = objectofinterests;
	}

	/**
	 * Gets the id.
	 *
	 * @return the id
	 */
	@Id
@GeneratedValue(strategy=GenerationType.IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	/**
	 * Sets the id.
	 *
	 * @param id the new id
	 */
	public void setId(int id) {
		this.id = id;
	}

	/**
	 * Gets the application.
	 *
	 * @return the application
	 */
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "application_id")
	public Application getApplication() {
		return this.application;
	}

	/**
	 * Sets the application.
	 *
	 * @param application the new application
	 */
	public void setApplication(Application application) {
		this.application = application;
	}

	/**
	 * Gets the title.
	 *
	 * @return the title
	 */
	@Column(name = "title")
	public String getTitle() {
		return this.title;
	}

	/**
	 * Sets the title.
	 *
	 * @param title the new title
	 */
	public void setTitle(String title) {
		this.title = title;
	}

	/**
	 * Gets the report title.
	 *
	 * @return the report title
	 */
	@Column(name = "report_title")
	public String getReportTitle() {
		return this.reportTitle;
	}

	/**
	 * Sets the report title.
	 *
	 * @param reportTitle the new report title
	 */
	public void setReportTitle(String reportTitle) {
		this.reportTitle = reportTitle;
	}

	/**
	 * Gets the description.
	 *
	 * @return the description
	 */
	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	/**
	 * Sets the description.
	 *
	 * @param description the new description
	 */
	public void setDescription(String description) {
		this.description = description;
	}

	/**
	 * Gets the time created.
	 *
	 * @return the time created
	 */
	@Column(name = "time_created", length = 29)
	public LocalDateTime getTimeCreated() {
		return this.timeCreated;
	}

	/**
	 * Sets the time created.
	 *
	 * @param timeCreated the new time created
	 */
	public void setTimeCreated(LocalDateTime timeCreated) {
		this.timeCreated = timeCreated;
	}

	/**
	 * Gets the time deleted.
	 *
	 * @return the time deleted
	 */
	@Column(name = "time_deleted", length = 29)
	public LocalDateTime getTimeDeleted() {
		return this.timeDeleted;
	}

	/**
	 * Sets the time deleted.
	 *
	 * @param timeDeleted the new time deleted
	 */
	public void setTimeDeleted(LocalDateTime timeDeleted) {
		this.timeDeleted = timeDeleted;
	}

	/**
	 * Gets the oitype relations for parent oitype id.
	 *
	 * @return the oitype relations for parent oitype id
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "oitypeByParentOitypeId")
	public Set<OitypeRelation> getOitypeRelationsForParentOitypeId() {
		return this.oitypeRelationsForParentOitypeId;
	}

	/**
	 * Sets the oitype relations for parent oitype id.
	 *
	 * @param oitypeRelationsForParentOitypeId the new oitype relations for parent oitype id
	 */
	public void setOitypeRelationsForParentOitypeId(Set<OitypeRelation> oitypeRelationsForParentOitypeId) {
		this.oitypeRelationsForParentOitypeId = oitypeRelationsForParentOitypeId;
	}

	/**
	 * Gets the oitype relations for child oitype id.
	 *
	 * @return the oitype relations for child oitype id
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "oitypeByChildOitypeId")
	public Set<OitypeRelation> getOitypeRelationsForChildOitypeId() {
		return this.oitypeRelationsForChildOitypeId;
	}

	/**
	 * Sets the oitype relations for child oitype id.
	 *
	 * @param oitypeRelationsForChildOitypeId the new oitype relations for child oitype id
	 */
	public void setOitypeRelationsForChildOitypeId(Set<OitypeRelation> oitypeRelationsForChildOitypeId) {
		this.oitypeRelationsForChildOitypeId = oitypeRelationsForChildOitypeId;
	}

	/**
	 * Gets the oitype properties.
	 *
	 * @return the oitype properties
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "oitype")
	public Set<OitypeProperty> getOitypeProperties() {
		return this.oitypeProperties;
	}

	/**
	 * Sets the oitype properties.
	 *
	 * @param oitypeProperties the new oitype properties
	 */
	public void setOitypeProperties(Set<OitypeProperty> oitypeProperties) {
		this.oitypeProperties = oitypeProperties;
	}

	/**
	 * Gets the objectofinterests.
	 *
	 * @return the objectofinterests
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "oitype")
	public Set<Objectofinterest> getObjectofinterests() {
		return this.objectofinterests;
	}

	/**
	 * Sets the objectofinterests.
	 *
	 * @param objectofinterests the new objectofinterests
	 */
	public void setObjectofinterests(Set<Objectofinterest> objectofinterests) {
		this.objectofinterests = objectofinterests;
	}

}
